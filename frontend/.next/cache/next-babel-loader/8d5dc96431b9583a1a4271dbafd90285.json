{"ast":null,"code":"var _jsxFileName = \"/frontend/components/profile/SettingsForm.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport React from \"react\";\nimport useSWR, { mutate } from \"swr\";\nimport ListErrors from \"../common/ListErrors\";\nimport checkLogin from \"../../lib/utils/checkLogin\";\nimport { SERVER_BASE_URL } from \"../../lib/utils/constant\";\nimport storage from \"../../lib/utils/storage\";\n\nconst SettingsForm = () => {\n  const [isLoading, setLoading] = React.useState(false);\n  const [errors, setErrors] = React.useState([]);\n  const [userInfo, setUserInfo] = React.useState({\n    image: \"\",\n    username: \"\",\n    bio: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    data: currentUser\n  } = useSWR(\"user\", storage);\n  const isLoggedIn = checkLogin(currentUser);\n  React.useEffect(() => {\n    if (!isLoggedIn) return;\n    setUserInfo(_objectSpread(_objectSpread({}, userInfo), currentUser));\n  }, []);\n\n  const updateState = field => e => {\n    const state = userInfo;\n\n    const newState = _objectSpread(_objectSpread({}, state), {}, {\n      [field]: e.target.value\n    });\n\n    setUserInfo(newState);\n  };\n\n  const submitForm = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    const user = _objectSpread({}, userInfo);\n\n    if (!user.password) {\n      delete user.password;\n    }\n\n    const {\n      data,\n      status\n    } = await axios.put(`${SERVER_BASE_URL}/user`, JSON.stringify({\n      user\n    }), {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${currentUser === null || currentUser === void 0 ? void 0 : currentUser.token}`\n      }\n    });\n    setLoading(false);\n\n    if (status !== 200) {\n      setErrors(data.errors.body);\n    }\n\n    if (data !== null && data !== void 0 && data.user) {\n      window.localStorage.setItem(\"user\", JSON.stringify(data.user));\n      mutate(\"user\", data.user);\n      Router.push(`/`);\n    }\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(ListErrors, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), __jsx(\"form\", {\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"URL of profile picture\",\n    value: userInfo.image,\n    onChange: updateState(\"image\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"text\",\n    placeholder: \"Username\",\n    value: userInfo.username,\n    onChange: updateState(\"username\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, __jsx(\"textarea\", {\n    className: \"form-control form-control-lg\",\n    rows: 8,\n    placeholder: \"Short bio about you\",\n    value: userInfo.bio,\n    onChange: updateState(\"bio\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })), __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"email\",\n    placeholder: \"Email\",\n    value: userInfo.email,\n    onChange: updateState(\"email\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"password\",\n    placeholder: \"New Password\",\n    value: userInfo.password,\n    onChange: updateState(\"password\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), __jsx(\"button\", {\n    className: \"btn btn-lg btn-primary pull-xs-right\",\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Update Settings\"))));\n};\n\nexport default SettingsForm;","map":{"version":3,"sources":["/frontend/components/profile/SettingsForm.tsx"],"names":["axios","Router","React","useSWR","mutate","ListErrors","checkLogin","SERVER_BASE_URL","storage","SettingsForm","isLoading","setLoading","useState","errors","setErrors","userInfo","setUserInfo","image","username","bio","email","password","data","currentUser","isLoggedIn","useEffect","updateState","field","e","state","newState","target","value","submitForm","preventDefault","user","status","put","JSON","stringify","headers","Authorization","token","body","window","localStorage","setItem","push"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\nimport React from \"react\";\nimport useSWR, { mutate } from \"swr\";\n\nimport ListErrors from \"../common/ListErrors\";\nimport checkLogin from \"../../lib/utils/checkLogin\";\nimport { SERVER_BASE_URL } from \"../../lib/utils/constant\";\nimport storage from \"../../lib/utils/storage\";\n\nconst SettingsForm = () => {\n  const [isLoading, setLoading] = React.useState(false);\n  const [errors, setErrors] = React.useState([]);\n  const [userInfo, setUserInfo] = React.useState({\n    image: \"\",\n    username: \"\",\n    bio: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { data: currentUser } = useSWR(\"user\", storage);\n  const isLoggedIn = checkLogin(currentUser);\n\n  React.useEffect(() => {\n    if (!isLoggedIn) return;\n    setUserInfo({ ...userInfo, ...currentUser });\n  }, []);\n\n  const updateState = (field) => (e) => {\n    const state = userInfo;\n    const newState = { ...state, [field]: e.target.value };\n    setUserInfo(newState);\n  };\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const user = { ...userInfo };\n\n    if (!user.password) {\n      delete user.password;\n    }\n\n    const { data, status } = await axios.put(\n      `${SERVER_BASE_URL}/user`,\n      JSON.stringify({ user }),\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${currentUser?.token}`,\n        },\n      }\n    );\n\n    setLoading(false);\n\n    if (status !== 200) {\n      setErrors(data.errors.body);\n    }\n\n    if (data?.user) {\n      window.localStorage.setItem(\"user\", JSON.stringify(data.user));\n      mutate(\"user\", data.user);\n      Router.push(`/`);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ListErrors errors={errors} />\n      <form onSubmit={submitForm}>\n        <fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"URL of profile picture\"\n              value={userInfo.image}\n              onChange={updateState(\"image\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"text\"\n              placeholder=\"Username\"\n              value={userInfo.username}\n              onChange={updateState(\"username\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <textarea\n              className=\"form-control form-control-lg\"\n              rows={8}\n              placeholder=\"Short bio about you\"\n              value={userInfo.bio}\n              onChange={updateState(\"bio\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={userInfo.email}\n              onChange={updateState(\"email\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"password\"\n              placeholder=\"New Password\"\n              value={userInfo.password}\n              onChange={updateState(\"password\")}\n            />\n          </fieldset>\n\n          <button\n            className=\"btn btn-lg btn-primary pull-xs-right\"\n            type=\"submit\"\n            disabled={isLoading}\n          >\n            Update Settings\n          </button>\n        </fieldset>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default SettingsForm;\n"]},"metadata":{},"sourceType":"module"}