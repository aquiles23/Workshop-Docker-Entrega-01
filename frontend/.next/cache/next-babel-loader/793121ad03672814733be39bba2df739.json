{"ast":null,"code":"import axios from \"axios\";\nimport { SERVER_BASE_URL } from \"../utils/constant\";\nimport { getQuery } from \"../utils/getQuery\";\nconst ArticleAPI = {\n  all: (page, limit = 10) => axios.get(`${SERVER_BASE_URL}/articles?${getQuery(limit, page)}`),\n  byAuthor: (author, page = 0, limit = 5) => axios.get(`${SERVER_BASE_URL}/articles?author=${encodeURIComponent(author)}&${getQuery(limit, page)}`),\n  byTag: (tag, page = 0, limit = 10) => axios.get(`${SERVER_BASE_URL}/articles?tag=${encodeURIComponent(tag)}&${getQuery(limit, page)}`),\n  delete: (id, token) => axios.delete(`${SERVER_BASE_URL}/articles/${id}`, {\n    headers: {\n      Authorization: `Token ${token}`\n    }\n  }),\n  favorite: slug => axios.post(`${SERVER_BASE_URL}/articles/${slug}/favorite`),\n  favoritedBy: (author, page) => axios.get(`${SERVER_BASE_URL}/articles?favorited=${encodeURIComponent(author)}&${getQuery(10, page)}`),\n  feed: (page, limit = 10) => axios.get(`${SERVER_BASE_URL}/articles/feed?${getQuery(limit, page)}`),\n  get: slug => axios.get(`${SERVER_BASE_URL}/articles/${encodeURIComponent(slug)}`),\n  unfavorite: slug => axios.delete(`${SERVER_BASE_URL}/articles/${slug}/favorite`),\n  update: async (article, token) => {\n    const {\n      data,\n      status\n    } = await axios.put(`${SERVER_BASE_URL}/articles/${article.slug}`, JSON.stringify({\n      article\n    }), {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${encodeURIComponent(token)}`\n      }\n    });\n    return {\n      data,\n      status\n    };\n  },\n  create: async (article, token) => {\n    const {\n      data,\n      status\n    } = await axios.post(`${SERVER_BASE_URL}/articles`, JSON.stringify({\n      article\n    }), {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${encodeURIComponent(token)}`\n      }\n    });\n    return {\n      data,\n      status\n    };\n  }\n};\nexport default ArticleAPI;","map":{"version":3,"sources":["/frontend/lib/api/article.ts"],"names":["axios","SERVER_BASE_URL","getQuery","ArticleAPI","all","page","limit","get","byAuthor","author","encodeURIComponent","byTag","tag","delete","id","token","headers","Authorization","favorite","slug","post","favoritedBy","feed","unfavorite","update","article","data","status","put","JSON","stringify","create"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport { SERVER_BASE_URL } from \"../utils/constant\";\nimport { getQuery } from \"../utils/getQuery\";\n\nconst ArticleAPI = {\n  all: (page, limit = 10) =>\n    axios.get(`${SERVER_BASE_URL}/articles?${getQuery(limit, page)}`),\n\n  byAuthor: (author, page = 0, limit = 5) =>\n    axios.get(\n      `${SERVER_BASE_URL}/articles?author=${encodeURIComponent(\n        author\n      )}&${getQuery(limit, page)}`\n    ),\n\n  byTag: (tag, page = 0, limit = 10) =>\n    axios.get(\n      `${SERVER_BASE_URL}/articles?tag=${encodeURIComponent(tag)}&${getQuery(\n        limit,\n        page\n      )}`\n    ),\n\n  delete: (id, token) =>\n    axios.delete(`${SERVER_BASE_URL}/articles/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`,\n      },\n    }),\n\n  favorite: (slug) =>\n    axios.post(`${SERVER_BASE_URL}/articles/${slug}/favorite`),\n\n  favoritedBy: (author, page) =>\n    axios.get(\n      `${SERVER_BASE_URL}/articles?favorited=${encodeURIComponent(\n        author\n      )}&${getQuery(10, page)}`\n    ),\n\n  feed: (page, limit = 10) =>\n    axios.get(`${SERVER_BASE_URL}/articles/feed?${getQuery(limit, page)}`),\n\n  get: (slug) =>\n    axios.get(`${SERVER_BASE_URL}/articles/${encodeURIComponent(slug)}`),\n\n  unfavorite: (slug) =>\n    axios.delete(`${SERVER_BASE_URL}/articles/${slug}/favorite`),\n\n  update: async (article, token) => {\n    const { data, status } = await axios.put(\n      `${SERVER_BASE_URL}/articles/${article.slug}`,\n      JSON.stringify({ article }),\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${encodeURIComponent(token)}`,\n        },\n      }\n    );\n    return {\n      data,\n      status,\n    };\n  },\n\n  create: async (article, token) => {\n    const { data, status } = await axios.post(\n      `${SERVER_BASE_URL}/articles`,\n      JSON.stringify({ article }),\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${encodeURIComponent(token)}`,\n        },\n      }\n    );\n    return {\n      data,\n      status,\n    };\n  },\n};\n\nexport default ArticleAPI;\n"]},"metadata":{},"sourceType":"module"}