{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/frontend/components/profile/SettingsForm.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport React from \"react\";\nimport useSWR, { mutate } from \"swr\";\nimport ListErrors from \"../common/ListErrors\";\nimport checkLogin from \"../../lib/utils/checkLogin\";\nimport { SERVER_BASE_URL } from \"../../lib/utils/constant\";\nimport storage from \"../../lib/utils/storage\";\n\nvar SettingsForm = function SettingsForm() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      errors = _React$useState4[0],\n      setErrors = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    image: \"\",\n    username: \"\",\n    bio: \"\",\n    email: \"\",\n    password: \"\"\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      userInfo = _React$useState6[0],\n      setUserInfo = _React$useState6[1];\n\n  var _useSWR = useSWR(\"user\", storage),\n      currentUser = _useSWR.data;\n\n  var isLoggedIn = checkLogin(currentUser);\n  React.useEffect(function () {\n    if (!isLoggedIn) return;\n    setUserInfo(_objectSpread(_objectSpread({}, userInfo), currentUser));\n  }, []);\n\n  var updateState = function updateState(field) {\n    return function (e) {\n      var state = userInfo;\n\n      var newState = _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, field, e.target.value));\n\n      setUserInfo(newState);\n    };\n  };\n\n  var submitForm = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var user, _yield$axios$put, data, status;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true);\n              user = _objectSpread({}, userInfo);\n\n              if (!user.password) {\n                delete user.password;\n              }\n\n              _context.next = 6;\n              return axios.put(\"\".concat(SERVER_BASE_URL, \"/user\"), JSON.stringify({\n                user: user\n              }), {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: \"Token \".concat(currentUser === null || currentUser === void 0 ? void 0 : currentUser.token)\n                }\n              });\n\n            case 6:\n              _yield$axios$put = _context.sent;\n              data = _yield$axios$put.data;\n              status = _yield$axios$put.status;\n              setLoading(false);\n\n              if (status !== 200) {\n                setErrors(data.errors.body);\n              }\n\n              if (data !== null && data !== void 0 && data.user) {\n                window.localStorage.setItem(\"user\", JSON.stringify(data.user));\n                mutate(\"user\", data.user);\n                Router.push(\"/\");\n              }\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitForm(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(ListErrors, {\n    errors: errors,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), __jsx(\"form\", {\n    onSubmit: submitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    placeholder: \"URL of profile picture\",\n    value: userInfo.image,\n    onChange: updateState(\"image\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"text\",\n    placeholder: \"Username\",\n    value: userInfo.username,\n    onChange: updateState(\"username\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, __jsx(\"textarea\", {\n    className: \"form-control form-control-lg\",\n    rows: 8,\n    placeholder: \"Short bio about you\",\n    value: userInfo.bio,\n    onChange: updateState(\"bio\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  })), __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"email\",\n    placeholder: \"Email\",\n    value: userInfo.email,\n    onChange: updateState(\"email\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"password\",\n    placeholder: \"New Password\",\n    value: userInfo.password,\n    onChange: updateState(\"password\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), __jsx(\"button\", {\n    className: \"btn btn-lg btn-primary pull-xs-right\",\n    type: \"submit\",\n    disabled: isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Update Settings\"))));\n};\n\n_s(SettingsForm, \"VpvI5x5mMN3YDQOqEhYJ4RmlZ7M=\", false, function () {\n  return [useSWR];\n});\n\n_c = SettingsForm;\nexport default SettingsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsForm\");","map":{"version":3,"sources":["/frontend/components/profile/SettingsForm.tsx"],"names":["axios","Router","React","useSWR","mutate","ListErrors","checkLogin","SERVER_BASE_URL","storage","SettingsForm","useState","isLoading","setLoading","errors","setErrors","image","username","bio","email","password","userInfo","setUserInfo","currentUser","data","isLoggedIn","useEffect","updateState","field","e","state","newState","target","value","submitForm","preventDefault","user","put","JSON","stringify","headers","Authorization","token","status","body","window","localStorage","setItem","push"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,MAAjB,QAA+B,KAA/B;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,wBAAgCP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAhC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,UAAlB;;AACA,yBAA4BV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5B;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AACA,yBAAgCZ,KAAK,CAACQ,QAAN,CAAe;AAC7CK,IAAAA,KAAK,EAAE,EADsC;AAE7CC,IAAAA,QAAQ,EAAE,EAFmC;AAG7CC,IAAAA,GAAG,EAAE,EAHwC;AAI7CC,IAAAA,KAAK,EAAE,EAJsC;AAK7CC,IAAAA,QAAQ,EAAE;AALmC,GAAf,CAAhC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAQA,gBAA8BlB,MAAM,CAAC,MAAD,EAASK,OAAT,CAApC;AAAA,MAAcc,WAAd,WAAQC,IAAR;;AACA,MAAMC,UAAU,GAAGlB,UAAU,CAACgB,WAAD,CAA7B;AAEApB,EAAAA,KAAK,CAACuB,SAAN,CAAgB,YAAM;AACpB,QAAI,CAACD,UAAL,EAAiB;AACjBH,IAAAA,WAAW,iCAAMD,QAAN,GAAmBE,WAAnB,EAAX;AACD,GAHD,EAGG,EAHH;;AAKA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,WAAW,UAACC,CAAD,EAAO;AACpC,UAAMC,KAAK,GAAGT,QAAd;;AACA,UAAMU,QAAQ,mCAAQD,KAAR,2BAAgBF,KAAhB,EAAwBC,CAAC,CAACG,MAAF,CAASC,KAAjC,EAAd;;AACAX,MAAAA,WAAW,CAACS,QAAD,CAAX;AACD,KAJmB;AAAA,GAApB;;AAMA,MAAMG,UAAU;AAAA,wEAAG,iBAAOL,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBA,cAAAA,CAAC,CAACM,cAAF;AACAtB,cAAAA,UAAU,CAAC,IAAD,CAAV;AAEMuB,cAAAA,IAJW,qBAICf,QAJD;;AAMjB,kBAAI,CAACe,IAAI,CAAChB,QAAV,EAAoB;AAClB,uBAAOgB,IAAI,CAAChB,QAAZ;AACD;;AARgB;AAAA,qBAUcnB,KAAK,CAACoC,GAAN,WAC1B7B,eAD0B,YAE7B8B,IAAI,CAACC,SAAL,CAAe;AAAEH,gBAAAA,IAAI,EAAJA;AAAF,eAAf,CAF6B,EAG7B;AACEI,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEPC,kBAAAA,aAAa,kBAAWlB,WAAX,aAAWA,WAAX,uBAAWA,WAAW,CAAEmB,KAAxB;AAFN;AADX,eAH6B,CAVd;;AAAA;AAAA;AAUTlB,cAAAA,IAVS,oBAUTA,IAVS;AAUHmB,cAAAA,MAVG,oBAUHA,MAVG;AAqBjB9B,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAEA,kBAAI8B,MAAM,KAAK,GAAf,EAAoB;AAClB5B,gBAAAA,SAAS,CAACS,IAAI,CAACV,MAAL,CAAY8B,IAAb,CAAT;AACD;;AAED,kBAAIpB,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEY,IAAV,EAAgB;AACdS,gBAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,EAAoCT,IAAI,CAACC,SAAL,CAAef,IAAI,CAACY,IAApB,CAApC;AACA/B,gBAAAA,MAAM,CAAC,MAAD,EAASmB,IAAI,CAACY,IAAd,CAAN;AACAlC,gBAAAA,MAAM,CAAC8C,IAAP;AACD;;AA/BgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVd,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAkCA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,MAAM,EAAEpB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,QAAQ,EAAEoB,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,wBAHd;AAIE,IAAA,KAAK,EAAEb,QAAQ,CAACL,KAJlB;AAKE,IAAA,QAAQ,EAAEW,WAAW,CAAC,OAAD,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAWE;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAEN,QAAQ,CAACJ,QAJlB;AAKE,IAAA,QAAQ,EAAEU,WAAW,CAAC,UAAD,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,EAqBE;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,IAAI,EAAE,CAFR;AAGE,IAAA,WAAW,EAAC,qBAHd;AAIE,IAAA,KAAK,EAAEN,QAAQ,CAACH,GAJlB;AAKE,IAAA,QAAQ,EAAES,WAAW,CAAC,KAAD,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBF,EA+BE;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,KAAK,EAAEN,QAAQ,CAACF,KAJlB;AAKE,IAAA,QAAQ,EAAEQ,WAAW,CAAC,OAAD,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA/BF,EAyCE;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,cAHd;AAIE,IAAA,KAAK,EAAEN,QAAQ,CAACD,QAJlB;AAKE,IAAA,QAAQ,EAAEO,WAAW,CAAC,UAAD,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzCF,EAmDE;AACE,IAAA,SAAS,EAAC,sCADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAEf,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAnDF,CADF,CAFF,CADF;AAkED,CA7HD;;GAAMF,Y;UAW0BN,M;;;KAX1BM,Y;AA+HN,eAAeA,YAAf","sourcesContent":["import axios from \"axios\";\nimport Router from \"next/router\";\nimport React from \"react\";\nimport useSWR, { mutate } from \"swr\";\n\nimport ListErrors from \"../common/ListErrors\";\nimport checkLogin from \"../../lib/utils/checkLogin\";\nimport { SERVER_BASE_URL } from \"../../lib/utils/constant\";\nimport storage from \"../../lib/utils/storage\";\n\nconst SettingsForm = () => {\n  const [isLoading, setLoading] = React.useState(false);\n  const [errors, setErrors] = React.useState([]);\n  const [userInfo, setUserInfo] = React.useState({\n    image: \"\",\n    username: \"\",\n    bio: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { data: currentUser } = useSWR(\"user\", storage);\n  const isLoggedIn = checkLogin(currentUser);\n\n  React.useEffect(() => {\n    if (!isLoggedIn) return;\n    setUserInfo({ ...userInfo, ...currentUser });\n  }, []);\n\n  const updateState = (field) => (e) => {\n    const state = userInfo;\n    const newState = { ...state, [field]: e.target.value };\n    setUserInfo(newState);\n  };\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const user = { ...userInfo };\n\n    if (!user.password) {\n      delete user.password;\n    }\n\n    const { data, status } = await axios.put(\n      `${SERVER_BASE_URL}/user`,\n      JSON.stringify({ user }),\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${currentUser?.token}`,\n        },\n      }\n    );\n\n    setLoading(false);\n\n    if (status !== 200) {\n      setErrors(data.errors.body);\n    }\n\n    if (data?.user) {\n      window.localStorage.setItem(\"user\", JSON.stringify(data.user));\n      mutate(\"user\", data.user);\n      Router.push(`/`);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ListErrors errors={errors} />\n      <form onSubmit={submitForm}>\n        <fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"URL of profile picture\"\n              value={userInfo.image}\n              onChange={updateState(\"image\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"text\"\n              placeholder=\"Username\"\n              value={userInfo.username}\n              onChange={updateState(\"username\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <textarea\n              className=\"form-control form-control-lg\"\n              rows={8}\n              placeholder=\"Short bio about you\"\n              value={userInfo.bio}\n              onChange={updateState(\"bio\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={userInfo.email}\n              onChange={updateState(\"email\")}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"password\"\n              placeholder=\"New Password\"\n              value={userInfo.password}\n              onChange={updateState(\"password\")}\n            />\n          </fieldset>\n\n          <button\n            className=\"btn btn-lg btn-primary pull-xs-right\"\n            type=\"submit\"\n            disabled={isLoading}\n          >\n            Update Settings\n          </button>\n        </fieldset>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default SettingsForm;\n"]},"metadata":{},"sourceType":"module"}