{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/frontend/components/profile/LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Router from \"next/router\";\nimport React from \"react\";\nimport { mutate } from \"swr\";\nimport ListErrors from \"../common/ListErrors\";\nimport UserAPI from \"../../lib/api/user\";\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      errors = _React$useState4[0],\n      setErrors = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var handleEmailChange = React.useCallback(function (e) {\n    return setEmail(e.target.value);\n  }, []);\n  var handlePasswordChange = React.useCallback(function (e) {\n    return setPassword(e.target.value);\n  }, []);\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _yield$UserAPI$login, data, status;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return UserAPI.login(email, password);\n\n            case 5:\n              _yield$UserAPI$login = _context.sent;\n              data = _yield$UserAPI$login.data;\n              status = _yield$UserAPI$login.status;\n\n              if (status !== 200) {\n                setErrors(data.errors);\n              }\n\n              if (data !== null && data !== void 0 && data.user) {\n                window.localStorage.setItem(\"user\", JSON.stringify(data.user));\n                mutate(\"user\", data === null || data === void 0 ? void 0 : data.user);\n                Router.push(\"/\");\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              console.error(_context.t0);\n\n            case 15:\n              _context.prev = 15;\n              setLoading(false);\n              return _context.finish(15);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12, 15, 18]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(ListErrors, {\n    errors: errors,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: handleEmailChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: handlePasswordChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), __jsx(\"button\", {\n    className: \"btn btn-lg btn-primary pull-xs-right\",\n    type: \"submit\",\n    disabled: isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Sign in\"))));\n};\n\n_s(LoginForm, \"7eo5Nd20Eec3CnEqvdWP20cMEZc=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/frontend/components/profile/LoginForm.tsx"],"names":["Router","React","mutate","ListErrors","UserAPI","LoginForm","useState","isLoading","setLoading","errors","setErrors","email","setEmail","password","setPassword","handleEmailChange","useCallback","e","target","value","handlePasswordChange","handleSubmit","preventDefault","login","data","status","user","window","localStorage","setItem","JSON","stringify","push","console","error"],"mappings":"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","sourcesContent":["import Router from \"next/router\";\nimport React from \"react\";\nimport { mutate } from \"swr\";\n\nimport ListErrors from \"../common/ListErrors\";\nimport UserAPI from \"../../lib/api/user\";\n\nconst LoginForm = () => {\n  const [isLoading, setLoading] = React.useState(false);\n  const [errors, setErrors] = React.useState([]);\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  const handleEmailChange = React.useCallback(\n    (e) => setEmail(e.target.value),\n    []\n  );\n  const handlePasswordChange = React.useCallback(\n    (e) => setPassword(e.target.value),\n    []\n  );\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const { data, status } = await UserAPI.login(email, password);\n      if (status !== 200) {\n        setErrors(data.errors);\n      }\n\n      if (data?.user) {\n        window.localStorage.setItem(\"user\", JSON.stringify(data.user));\n        mutate(\"user\", data?.user);\n        Router.push(\"/\");\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <ListErrors errors={errors} />\n\n      <form onSubmit={handleSubmit}>\n        <fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={handleEmailChange}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={handlePasswordChange}\n            />\n          </fieldset>\n\n          <button\n            className=\"btn btn-lg btn-primary pull-xs-right\"\n            type=\"submit\"\n            disabled={isLoading}\n          >\n            Sign in\n          </button>\n        </fieldset>\n      </form>\n    </>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}