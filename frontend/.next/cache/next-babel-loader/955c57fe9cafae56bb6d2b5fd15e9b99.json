{"ast":null,"code":"import React from \"react\";\n\nconst useSessionStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    if (false) {\n      const item = window.sessionStorage.getItem(key);\n      return !!item ? JSON.parse(item) : initialValue;\n    } else {\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\n    setStoredValue(valueToStore);\n\n    if (false) {\n      window.sessionStorage.setItem(key, JSON.stringify(valueToStore));\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useSessionStorage;","map":{"version":3,"sources":["/frontend/lib/hooks/useSessionStorage.ts"],"names":["React","useSessionStorage","key","initialValue","storedValue","setStoredValue","useState","item","window","sessionStorage","getItem","JSON","parse","setValue","value","valueToStore","Function","setItem","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAiB,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAC/C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,KAAK,CAACM,QAAN,CAAe,MAAM;AACzD,eAAmC;AACjC,YAAMC,IAAI,GAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8BR,GAA9B,CAAb;AACA,aAAO,CAAC,CAACK,IAAF,GAASI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAT,GAA4BJ,YAAnC;AACD,KAHD,MAGO;AACL,aAAOA,YAAP;AACD;AACF,GAPqC,CAAtC;;AASA,QAAMU,QAAQ,GAAIC,KAAD,IAAW;AAC1B,UAAMC,YAAY,GAAGD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACV,WAAD,CAAjC,GAAiDU,KAAtE;AACAT,IAAAA,cAAc,CAACU,YAAD,CAAd;;AACA,eAAmC;AACjCP,MAAAA,MAAM,CAACC,cAAP,CAAsBQ,OAAtB,CAA8Bf,GAA9B,EAAmCS,IAAI,CAACO,SAAL,CAAeH,YAAf,CAAnC;AACD;AACF,GAND;;AAQA,SAAO,CAACX,WAAD,EAAcS,QAAd,CAAP;AACD,CAnBD;;AAqBA,eAAeZ,iBAAf","sourcesContent":["import React from \"react\";\n\nconst useSessionStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    if (typeof window !== \"undefined\") {\n      const item = window.sessionStorage.getItem(key);\n      return !!item ? JSON.parse(item) : initialValue;\n    } else {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\n    setStoredValue(valueToStore);\n    if (typeof window !== \"undefined\") {\n      window.sessionStorage.setItem(key, JSON.stringify(valueToStore));\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useSessionStorage;\n"]},"metadata":{},"sourceType":"module"}