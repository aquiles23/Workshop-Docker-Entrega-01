{"ast":null,"code":"var _jsxFileName = \"/frontend/components/profile/RegisterForm.tsx\";\nvar __jsx = React.createElement;\nimport Router from \"next/router\";\nimport React from \"react\";\nimport { mutate } from \"swr\";\nimport ListErrors from \"../common/ListErrors\";\nimport UserAPI from \"../../lib/api/user\";\n\nconst RegisterForm = () => {\n  const [isLoading, setLoading] = React.useState(false);\n  const [errors, setErrors] = React.useState([]);\n  const [username, setUsername] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const handleUsernameChange = React.useCallback(e => setUsername(e.target.value), []);\n  const handleEmailChange = React.useCallback(e => setEmail(e.target.value), []);\n  const handlePasswordChange = React.useCallback(e => setPassword(e.target.value), []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const {\n        data,\n        status\n      } = await UserAPI.register(username, email, password);\n\n      if (status !== 200 && data !== null && data !== void 0 && data.errors) {\n        setErrors(data.errors);\n      }\n\n      if (data !== null && data !== void 0 && data.user) {\n        window.localStorage.setItem(\"user\", JSON.stringify(data.user));\n        mutate(\"user\", data.user);\n        Router.push(\"/\");\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ListErrors, {\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"text\",\n    placeholder: \"Username\",\n    value: username,\n    onChange: handleUsernameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"email\",\n    placeholder: \"Email\",\n    value: email,\n    onChange: handleEmailChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), __jsx(\"fieldset\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control form-control-lg\",\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: handlePasswordChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })), __jsx(\"button\", {\n    className: \"btn btn-lg btn-primary pull-xs-right\",\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/frontend/components/profile/RegisterForm.tsx"],"names":["Router","React","mutate","ListErrors","UserAPI","RegisterForm","isLoading","setLoading","useState","errors","setErrors","username","setUsername","email","setEmail","password","setPassword","handleUsernameChange","useCallback","e","target","value","handleEmailChange","handlePasswordChange","handleSubmit","preventDefault","data","status","register","user","window","localStorage","setItem","JSON","stringify","push","error","console"],"mappings":"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","sourcesContent":["import Router from \"next/router\";\nimport React from \"react\";\nimport { mutate } from \"swr\";\n\nimport ListErrors from \"../common/ListErrors\";\nimport UserAPI from \"../../lib/api/user\";\n\nconst RegisterForm = () => {\n  const [isLoading, setLoading] = React.useState(false);\n  const [errors, setErrors] = React.useState([]);\n  const [username, setUsername] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  const handleUsernameChange = React.useCallback(\n    (e) => setUsername(e.target.value),\n    []\n  );\n  const handleEmailChange = React.useCallback(\n    (e) => setEmail(e.target.value),\n    []\n  );\n  const handlePasswordChange = React.useCallback(\n    (e) => setPassword(e.target.value),\n    []\n  );\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const { data, status } = await UserAPI.register(\n        username,\n        email,\n        password\n      );\n      if (status !== 200 && data?.errors) {\n        setErrors(data.errors);\n      }\n      if (data?.user) {\n        window.localStorage.setItem(\"user\", JSON.stringify(data.user));\n        mutate(\"user\", data.user);\n        Router.push(\"/\");\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <ListErrors errors={errors} />\n\n      <form onSubmit={handleSubmit}>\n        <fieldset>\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"text\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={handleUsernameChange}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={handleEmailChange}\n            />\n          </fieldset>\n\n          <fieldset className=\"form-group\">\n            <input\n              className=\"form-control form-control-lg\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={handlePasswordChange}\n            />\n          </fieldset>\n\n          <button\n            className=\"btn btn-lg btn-primary pull-xs-right\"\n            type=\"submit\"\n            disabled={isLoading}\n          >\n            Sign up\n          </button>\n        </fieldset>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}