{"ast":null,"code":"import axios from \"axios\";\nimport { SERVER_BASE_URL } from \"../utils/constant\";\nconst UserAPI = {\n  current: async () => {\n    const user = window.localStorage.getItem(\"user\");\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    try {\n      const response = await axios.get(`/user`, {\n        headers: {\n          Authorization: `Token ${encodeURIComponent(token)}`\n        }\n      });\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  login: async (email, password) => {\n    try {\n      const response = await axios.post(`${SERVER_BASE_URL}/users/login`, JSON.stringify({\n        user: {\n          email,\n          password\n        }\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  register: async (username, email, password) => {\n    try {\n      const response = await axios.post(`${SERVER_BASE_URL}/users`, JSON.stringify({\n        user: {\n          username,\n          email,\n          password\n        }\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  save: async user => {\n    try {\n      const response = await axios.put(`${SERVER_BASE_URL}/user`, JSON.stringify({\n        user\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  follow: async username => {\n    const user = JSON.parse(window.localStorage.getItem(\"user\"));\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    try {\n      const response = await axios.post(`${SERVER_BASE_URL}/profiles/${username}/follow`, {}, {\n        headers: {\n          Authorization: `Token ${encodeURIComponent(token)}`\n        }\n      });\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  unfollow: async username => {\n    const user = JSON.parse(window.localStorage.getItem(\"user\"));\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    try {\n      const response = await axios.delete(`${SERVER_BASE_URL}/profiles/${username}/follow`, {\n        headers: {\n          Authorization: `Token ${encodeURIComponent(token)}`\n        }\n      });\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  get: async username => axios.get(`${SERVER_BASE_URL}/profiles/${username}`)\n};\nexport default UserAPI;","map":{"version":3,"sources":["/frontend/lib/api/user.ts"],"names":["axios","SERVER_BASE_URL","UserAPI","current","user","window","localStorage","getItem","token","response","get","headers","Authorization","encodeURIComponent","error","login","email","password","post","JSON","stringify","register","username","save","put","follow","parse","unfollow","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport { SERVER_BASE_URL } from \"../utils/constant\";\n\nconst UserAPI = {\n  current: async () => {\n    const user: any = window.localStorage.getItem(\"user\");\n    const token = user?.token;\n    try {\n      const response = await axios.get(`/user`, {\n        headers: {\n          Authorization: `Token ${encodeURIComponent(token)}`,\n        },\n      });\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  login: async (email, password) => {\n    try {\n      const response = await axios.post(\n        `${SERVER_BASE_URL}/users/login`,\n        JSON.stringify({ user: { email, password } }),\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  register: async (username, email, password) => {\n    try {\n      const response = await axios.post(\n        `${SERVER_BASE_URL}/users`,\n        JSON.stringify({ user: { username, email, password } }),\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  save: async (user) => {\n    try {\n      const response = await axios.put(\n        `${SERVER_BASE_URL}/user`,\n        JSON.stringify({ user }),\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  follow: async (username) => {\n    const user: any = JSON.parse(window.localStorage.getItem(\"user\"));\n    const token = user?.token;\n    try {\n      const response = await axios.post(\n        `${SERVER_BASE_URL}/profiles/${username}/follow`,\n        {},\n        {\n          headers: {\n            Authorization: `Token ${encodeURIComponent(token)}`,\n          },\n        }\n      );\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  unfollow: async (username) => {\n    const user: any = JSON.parse(window.localStorage.getItem(\"user\"));\n    const token = user?.token;\n    try {\n      const response = await axios.delete(\n        `${SERVER_BASE_URL}/profiles/${username}/follow`,\n        {\n          headers: {\n            Authorization: `Token ${encodeURIComponent(token)}`,\n          },\n        }\n      );\n      return response;\n    } catch (error) {\n      return error.response;\n    }\n  },\n  get: async (username) => axios.get(`${SERVER_BASE_URL}/profiles/${username}`),\n};\n\nexport default UserAPI;\n"]},"metadata":{},"sourceType":"module"}