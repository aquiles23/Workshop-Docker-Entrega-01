{"ast":null,"code":"var _jsxFileName = \"/frontend/components/comment/CommentInput.tsx\";\nvar __jsx = React.createElement;\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport useSWR, { trigger } from \"swr\";\nimport CustomImage from \"../common/CustomImage\";\nimport CustomLink from \"../common/CustomLink\";\nimport checkLogin from \"../../lib/utils/checkLogin\";\nimport { SERVER_BASE_URL } from \"../../lib/utils/constant\";\nimport storage from \"../../lib/utils/storage\";\n\nconst CommentInput = () => {\n  const {\n    data: currentUser\n  } = useSWR(\"user\", storage);\n  const isLoggedIn = checkLogin(currentUser);\n  const router = useRouter();\n  const {\n    query: {\n      pid\n    }\n  } = router;\n  const [content, setContent] = React.useState(\"\");\n  const [isLoading, setLoading] = React.useState(false);\n  const handleChange = React.useCallback(e => {\n    setContent(e.target.value);\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    await axios.post(`${SERVER_BASE_URL}/articles/${encodeURIComponent(String(pid))}/comments`, JSON.stringify({\n      comment: {\n        body: content\n      }\n    }), {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${encodeURIComponent(currentUser === null || currentUser === void 0 ? void 0 : currentUser.token)}`\n      }\n    });\n    setLoading(false);\n    setContent(\"\");\n    trigger(`${SERVER_BASE_URL}/articles/${pid}/comments`);\n  };\n\n  if (!isLoggedIn) {\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, __jsx(CustomLink, {\n      href: \"/user/login\",\n      as: \"/user/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Sign in\"), \"\\xA0or\\xA0\", __jsx(CustomLink, {\n      href: \"/user/register\",\n      as: \"/user/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"sign up\"), \"\\xA0to add comments on this article.\");\n  }\n\n  return __jsx(\"form\", {\n    className: \"card comment-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"card-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(\"textarea\", {\n    rows: 3,\n    className: \"form-control\",\n    placeholder: \"Write a comment...\",\n    value: content,\n    onChange: handleChange,\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(CustomImage, {\n    className: \"comment-author-img\",\n    src: currentUser === null || currentUser === void 0 ? void 0 : currentUser.image,\n    alt: \"Comment author's profile image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    className: \"btn btn-sm btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Post Comment\")));\n};\n\nexport default CommentInput;","map":{"version":3,"sources":["/frontend/components/comment/CommentInput.tsx"],"names":["axios","useRouter","React","useSWR","trigger","CustomImage","CustomLink","checkLogin","SERVER_BASE_URL","storage","CommentInput","data","currentUser","isLoggedIn","router","query","pid","content","setContent","useState","isLoading","setLoading","handleChange","useCallback","e","target","value","handleSubmit","preventDefault","post","encodeURIComponent","String","JSON","stringify","comment","body","headers","Authorization","token","image"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport useSWR, { trigger } from \"swr\";\n\nimport CustomImage from \"../common/CustomImage\";\nimport CustomLink from \"../common/CustomLink\";\nimport checkLogin from \"../../lib/utils/checkLogin\";\nimport { SERVER_BASE_URL } from \"../../lib/utils/constant\";\nimport storage from \"../../lib/utils/storage\";\n\nconst CommentInput = () => {\n  const { data: currentUser } = useSWR(\"user\", storage);\n  const isLoggedIn = checkLogin(currentUser);\n  const router = useRouter();\n  const {\n    query: { pid },\n  } = router;\n\n  const [content, setContent] = React.useState(\"\");\n  const [isLoading, setLoading] = React.useState(false);\n\n  const handleChange = React.useCallback((e) => {\n    setContent(e.target.value);\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    await axios.post(\n      `${SERVER_BASE_URL}/articles/${encodeURIComponent(String(pid))}/comments`,\n      JSON.stringify({\n        comment: {\n          body: content,\n        },\n      }),\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${encodeURIComponent(currentUser?.token)}`,\n        },\n      }\n    );\n    setLoading(false);\n    setContent(\"\");\n    trigger(`${SERVER_BASE_URL}/articles/${pid}/comments`);\n  };\n\n  if (!isLoggedIn) {\n    return (\n      <p>\n        <CustomLink href=\"/user/login\" as=\"/user/login\">\n          Sign in\n        </CustomLink>\n        &nbsp;or&nbsp;\n        <CustomLink href=\"/user/register\" as=\"/user/register\">\n          sign up\n        </CustomLink>\n        &nbsp;to add comments on this article.\n      </p>\n    );\n  }\n\n  return (\n    <form className=\"card comment-form\" onSubmit={handleSubmit}>\n      <div className=\"card-block\">\n        <textarea\n          rows={3}\n          className=\"form-control\"\n          placeholder=\"Write a comment...\"\n          value={content}\n          onChange={handleChange}\n          disabled={isLoading}\n        />\n      </div>\n      <div className=\"card-footer\">\n        <CustomImage\n          className=\"comment-author-img\"\n          src={currentUser?.image}\n          alt=\"Comment author's profile image\"\n        />\n        <button className=\"btn btn-sm btn-primary\" type=\"submit\">\n          Post Comment\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default CommentInput;\n"]},"metadata":{},"sourceType":"module"}