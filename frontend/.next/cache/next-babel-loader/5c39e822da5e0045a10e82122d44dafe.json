{"ast":null,"code":"var _jsxFileName = \"/frontend/components/home/Tags.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport CustomLink from \"../common/CustomLink\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport { usePageDispatch } from \"../../lib/context/PageContext\";\nimport useSWR from \"swr\";\nimport { SERVER_BASE_URL } from \"../../lib/utils/constant\";\nimport fetcher from \"../../lib/utils/fetcher\";\nimport ErrorMessage from \"../common/ErrorMessage\";\n\nconst Tags = () => {\n  const setPage = usePageDispatch();\n  const handleClick = React.useCallback(() => setPage(0), []);\n  const {\n    data,\n    error\n  } = useSWR(`${SERVER_BASE_URL}/tags`, fetcher);\n  if (error) return __jsx(ErrorMessage, {\n    message: \"Cannot load popular tags...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  });\n  if (!data) return __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  });\n  const {\n    tags\n  } = data;\n  return __jsx(\"div\", {\n    className: \"tag-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, tags === null || tags === void 0 ? void 0 : tags.map(tag => __jsx(CustomLink, {\n    key: tag,\n    href: `/?tag=${tag}`,\n    as: `/?tag=${tag}`,\n    className: \"tag-default tag-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, tag))));\n};\n\nexport default Tags;","map":{"version":3,"sources":["/frontend/components/home/Tags.tsx"],"names":["React","CustomLink","LoadingSpinner","usePageDispatch","useSWR","SERVER_BASE_URL","fetcher","ErrorMessage","Tags","setPage","handleClick","useCallback","data","error","tags","map","tag"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGN,eAAe,EAA/B;AACA,QAAMO,WAAW,GAAGV,KAAK,CAACW,WAAN,CAAkB,MAAMF,OAAO,CAAC,CAAD,CAA/B,EAAoC,EAApC,CAApB;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBT,MAAM,CAAE,GAAEC,eAAgB,OAApB,EAA4BC,OAA5B,CAA9B;AAEA,MAAIO,KAAJ,EAAW,OAAO,MAAC,YAAD;AAAc,IAAA,OAAO,EAAC,6BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEX,QAAM;AAAEE,IAAAA;AAAF,MAAWF,IAAjB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IADH,aACGA,IADH,uBACGA,IAAI,CAAEC,GAAN,CAAWC,GAAD,IACT,MAAC,UAAD;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,IAAI,EAAG,SAAQA,GAAI,EAFrB;AAGE,IAAA,EAAE,EAAG,SAAQA,GAAI,EAHnB;AAIE,IAAA,SAAS,EAAC,sBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAM,IAAA,OAAO,EAAEN,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BM,GAA7B,CANF,CADD,CADH,CADF;AAcD,CAvBD;;AAyBA,eAAeR,IAAf","sourcesContent":["import React from \"react\";\n\nimport CustomLink from \"../common/CustomLink\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport { usePageDispatch } from \"../../lib/context/PageContext\";\nimport useSWR from \"swr\";\nimport { SERVER_BASE_URL } from \"../../lib/utils/constant\";\nimport fetcher from \"../../lib/utils/fetcher\";\nimport ErrorMessage from \"../common/ErrorMessage\";\n\nconst Tags = () => {\n  const setPage = usePageDispatch();\n  const handleClick = React.useCallback(() => setPage(0), []);\n  const { data, error } = useSWR(`${SERVER_BASE_URL}/tags`, fetcher);\n\n  if (error) return <ErrorMessage message=\"Cannot load popular tags...\" />;\n  if (!data) return <LoadingSpinner />;\n\n  const { tags } = data;\n  return (\n    <div className=\"tag-list\">\n      {tags?.map((tag) => (\n        <CustomLink\n          key={tag}\n          href={`/?tag=${tag}`}\n          as={`/?tag=${tag}`}\n          className=\"tag-default tag-pill\"\n        >\n          <span onClick={handleClick}>{tag}</span>\n        </CustomLink>\n      ))}\n    </div>\n  );\n};\n\nexport default Tags;\n"]},"metadata":{},"sourceType":"module"}