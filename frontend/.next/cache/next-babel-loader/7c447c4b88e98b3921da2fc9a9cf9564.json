{"ast":null,"code":"var _jsxFileName = \"/frontend/components/article/ArticleList.tsx\";\nvar __jsx = React.createElement;\nimport styled from \"@emotion/styled\";\nimport { useRouter } from \"next/router\";\nimport React, { useMemo } from \"react\";\nimport useSWR from \"swr\";\nimport ArticlePreview from \"components/article/ArticlePreview\";\nimport ErrorMessage from \"components/common/ErrorMessage\";\nimport LoadingSpinner from \"components/common/LoadingSpinner\";\nimport Maybe from \"components/common/Maybe\";\nimport Pagination from \"components/common/Pagination\";\nimport { usePageState } from \"lib/context/PageContext\";\nimport { usePageCountState, usePageCountDispatch } from \"lib/context/PageCountContext\";\nimport { SERVER_BASE_URL, DEFAULT_LIMIT } from \"lib/utils/constant\";\nimport fetcher from \"lib/utils/fetcher\";\nconst EmptyMessage = styled(\"div\")`\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 1.5rem 0;\n`;\n\nconst ArticleList = () => {\n  const page = usePageState();\n  const pageCount = usePageCountState();\n  const setPageCount = usePageCountDispatch();\n  const lastIndex = pageCount > 480 ? Math.ceil(pageCount / 20) : Math.ceil(pageCount / 20) - 1;\n  const router = useRouter();\n  const {\n    asPath,\n    pathname,\n    query\n  } = router;\n  const {\n    favorite,\n    follow,\n    tag,\n    pid\n  } = query;\n  const isProfilePage = pathname.startsWith(`/profile`);\n\n  const getFetchURL = () => {\n    switch (true) {\n      case !!tag:\n        return `${SERVER_BASE_URL}/articles${asPath}&offset=${page * DEFAULT_LIMIT}`;\n\n      case isProfilePage && !!favorite:\n        return `${SERVER_BASE_URL}/articles?favorited=${encodeURIComponent(String(pid))}&offset=${page * DEFAULT_LIMIT}`;\n\n      case isProfilePage && !favorite:\n        return `${SERVER_BASE_URL}/articles?author=${encodeURIComponent(String(pid))}&offset=${page * DEFAULT_LIMIT}`;\n\n      case !isProfilePage && !!follow:\n        return `${SERVER_BASE_URL}/articles/feed?offset=${page * DEFAULT_LIMIT}`;\n\n      default:\n        return `${SERVER_BASE_URL}/articles?offset=${page * DEFAULT_LIMIT}`;\n    }\n  };\n\n  let fetchURL = useMemo(() => getFetchURL(), [favorite, page, tag, isProfilePage]);\n  const {\n    data,\n    error\n  } = useSWR(fetchURL, fetcher);\n  if (error) return __jsx(ErrorMessage, {\n    message: \"Cannot load recent articles...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  });\n  if (!data) return __jsx(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  });\n  const {\n    articles,\n    articlesCount\n  } = data;\n  setPageCount(articlesCount);\n\n  if ((articles === null || articles === void 0 ? void 0 : articles.length) === 0) {\n    return __jsx(EmptyMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }, \"No articles are here... yet.\");\n  }\n\n  return __jsx(React.Fragment, null, articles === null || articles === void 0 ? void 0 : articles.map(article => __jsx(ArticlePreview, {\n    key: article.slug,\n    article: article,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), __jsx(Maybe, {\n    test: articlesCount && articlesCount > 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Pagination, {\n    total: pageCount,\n    limit: 20,\n    pageCount: 10,\n    currentPage: page,\n    lastIndex: lastIndex,\n    fetchURL: fetchURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ArticleList;","map":{"version":3,"sources":["/frontend/components/article/ArticleList.tsx"],"names":["styled","useRouter","React","useMemo","useSWR","ArticlePreview","ErrorMessage","LoadingSpinner","Maybe","Pagination","usePageState","usePageCountState","usePageCountDispatch","SERVER_BASE_URL","DEFAULT_LIMIT","fetcher","EmptyMessage","ArticleList","page","pageCount","setPageCount","lastIndex","Math","ceil","router","asPath","pathname","query","favorite","follow","tag","pid","isProfilePage","startsWith","getFetchURL","encodeURIComponent","String","fetchURL","data","error","articles","articlesCount","length","map","article","slug"],"mappings":"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","sourcesContent":["import styled from \"@emotion/styled\";\nimport { useRouter } from \"next/router\";\nimport React, { useMemo } from \"react\";\nimport useSWR from \"swr\";\n\nimport ArticlePreview from \"components/article/ArticlePreview\";\nimport ErrorMessage from \"components/common/ErrorMessage\";\nimport LoadingSpinner from \"components/common/LoadingSpinner\";\nimport Maybe from \"components/common/Maybe\";\nimport Pagination from \"components/common/Pagination\";\nimport { usePageState } from \"lib/context/PageContext\";\nimport {\n  usePageCountState,\n  usePageCountDispatch,\n} from \"lib/context/PageCountContext\";\nimport { SERVER_BASE_URL, DEFAULT_LIMIT } from \"lib/utils/constant\";\nimport fetcher from \"lib/utils/fetcher\";\n\nconst EmptyMessage = styled(\"div\")`\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 1.5rem 0;\n`;\n\nconst ArticleList = () => {\n  const page = usePageState();\n  const pageCount = usePageCountState();\n  const setPageCount = usePageCountDispatch();\n  const lastIndex =\n    pageCount > 480 ? Math.ceil(pageCount / 20) : Math.ceil(pageCount / 20) - 1;\n\n  const router = useRouter();\n  const { asPath, pathname, query } = router;\n  const { favorite, follow, tag, pid } = query;\n  const isProfilePage = pathname.startsWith(`/profile`);\n\n  const getFetchURL = () => {\n    switch (true) {\n      case !!tag:\n        return `${SERVER_BASE_URL}/articles${asPath}&offset=${\n          page * DEFAULT_LIMIT\n        }`;\n      case isProfilePage && !!favorite:\n        return `${SERVER_BASE_URL}/articles?favorited=${encodeURIComponent(\n          String(pid)\n        )}&offset=${page * DEFAULT_LIMIT}`;\n      case isProfilePage && !favorite:\n        return `${SERVER_BASE_URL}/articles?author=${encodeURIComponent(\n          String(pid)\n        )}&offset=${page * DEFAULT_LIMIT}`;\n      case !isProfilePage && !!follow:\n        return `${SERVER_BASE_URL}/articles/feed?offset=${\n          page * DEFAULT_LIMIT\n        }`;\n      default:\n        return `${SERVER_BASE_URL}/articles?offset=${page * DEFAULT_LIMIT}`;\n    }\n  };\n\n  let fetchURL = useMemo(() => getFetchURL(), [\n    favorite,\n    page,\n    tag,\n    isProfilePage,\n  ]);\n\n  const { data, error } = useSWR(fetchURL, fetcher);\n\n  if (error) return <ErrorMessage message=\"Cannot load recent articles...\" />;\n  if (!data) return <LoadingSpinner />;\n\n  const { articles, articlesCount } = data;\n  setPageCount(articlesCount);\n\n  if (articles?.length === 0) {\n    return <EmptyMessage>No articles are here... yet.</EmptyMessage>;\n  }\n\n  return (\n    <>\n      {articles?.map((article) => (\n        <ArticlePreview key={article.slug} article={article} />\n      ))}\n\n      <Maybe test={articlesCount && articlesCount > 20}>\n        <Pagination\n          total={pageCount}\n          limit={20}\n          pageCount={10}\n          currentPage={page}\n          lastIndex={lastIndex}\n          fetchURL={fetchURL}\n        />\n      </Maybe>\n    </>\n  );\n};\n\nexport default ArticleList;\n"]},"metadata":{},"sourceType":"module"}