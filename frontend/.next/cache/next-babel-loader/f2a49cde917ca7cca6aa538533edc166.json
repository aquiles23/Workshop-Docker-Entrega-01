{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/frontend/components/home/Tags.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport CustomLink from \"../common/CustomLink\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport { usePageDispatch } from \"../../lib/context/PageContext\";\nimport useSWR from \"swr\";\nimport { SERVER_BASE_URL } from \"../../lib/utils/constant\";\nimport fetcher from \"../../lib/utils/fetcher\";\nimport ErrorMessage from \"../common/ErrorMessage\";\n\nvar Tags = function Tags() {\n  _s();\n\n  var setPage = usePageDispatch();\n  var handleClick = React.useCallback(function () {\n    return setPage(0);\n  }, []);\n\n  var _useSWR = useSWR(\"\".concat(SERVER_BASE_URL, \"/tags\"), fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  if (error) return __jsx(ErrorMessage, {\n    message: \"Cannot load popular tags...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  });\n  if (!data) return __jsx(LoadingSpinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  });\n  var tags = data.tags;\n  return __jsx(\"div\", {\n    className: \"tag-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, tags === null || tags === void 0 ? void 0 : tags.map(function (tag) {\n    return __jsx(CustomLink, {\n      key: tag,\n      href: \"/?tag=\".concat(tag),\n      as: \"/?tag=\".concat(tag),\n      className: \"tag-default tag-pill\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      onClick: handleClick,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, tag));\n  }));\n};\n\n_s(Tags, \"X5WjxVhvV3rSCEQ9FJ9HH+MeVUI=\", false, function () {\n  return [usePageDispatch, useSWR];\n});\n\n_c = Tags;\nexport default Tags;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tags\");","map":{"version":3,"sources":["/frontend/components/home/Tags.tsx"],"names":["React","CustomLink","LoadingSpinner","usePageDispatch","useSWR","SERVER_BASE_URL","fetcher","ErrorMessage","Tags","setPage","handleClick","useCallback","data","error","tags","map","tag"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,OAAO,GAAGN,eAAe,EAA/B;AACA,MAAMO,WAAW,GAAGV,KAAK,CAACW,WAAN,CAAkB;AAAA,WAAMF,OAAO,CAAC,CAAD,CAAb;AAAA,GAAlB,EAAoC,EAApC,CAApB;;AACA,gBAAwBL,MAAM,WAAIC,eAAJ,YAA4BC,OAA5B,CAA9B;AAAA,MAAQM,IAAR,WAAQA,IAAR;AAAA,MAAcC,KAAd,WAAcA,KAAd;;AAEA,MAAIA,KAAJ,EAAW,OAAO,MAAC,YAAD;AAAc,IAAA,OAAO,EAAC,6BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEX,MAAQE,IAAR,GAAiBF,IAAjB,CAAQE,IAAR;AACA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,aACGA,IADH,uBACGA,IAAI,CAAEC,GAAN,CAAU,UAACC,GAAD;AAAA,WACT,MAAC,UAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,IAAI,kBAAWA,GAAX,CAFN;AAGE,MAAA,EAAE,kBAAWA,GAAX,CAHJ;AAIE,MAAA,SAAS,EAAC,sBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAM,MAAA,OAAO,EAAEN,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BM,GAA7B,CANF,CADS;AAAA,GAAV,CADH,CADF;AAcD,CAvBD;;GAAMR,I;UACYL,e,EAEQC,M;;;KAHpBI,I;AAyBN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nimport CustomLink from \"../common/CustomLink\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport { usePageDispatch } from \"../../lib/context/PageContext\";\nimport useSWR from \"swr\";\nimport { SERVER_BASE_URL } from \"../../lib/utils/constant\";\nimport fetcher from \"../../lib/utils/fetcher\";\nimport ErrorMessage from \"../common/ErrorMessage\";\n\nconst Tags = () => {\n  const setPage = usePageDispatch();\n  const handleClick = React.useCallback(() => setPage(0), []);\n  const { data, error } = useSWR(`${SERVER_BASE_URL}/tags`, fetcher);\n\n  if (error) return <ErrorMessage message=\"Cannot load popular tags...\" />;\n  if (!data) return <LoadingSpinner />;\n\n  const { tags } = data;\n  return (\n    <div className=\"tag-list\">\n      {tags?.map((tag) => (\n        <CustomLink\n          key={tag}\n          href={`/?tag=${tag}`}\n          as={`/?tag=${tag}`}\n          className=\"tag-default tag-pill\"\n        >\n          <span onClick={handleClick}>{tag}</span>\n        </CustomLink>\n      ))}\n    </div>\n  );\n};\n\nexport default Tags;\n"]},"metadata":{},"sourceType":"module"}